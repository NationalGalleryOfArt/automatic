openapi: 3.0.3
info:
  title: Secure API
  description: Example API with authentication
  version: 1.0.0
paths:
  /users:
    get:
      operationId: list_users
      summary: List all users
      description: Get a list of all users (requires authentication)
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
    post:
      operationId: create_user
      summary: Create a new user
      description: Create a new user (requires authentication)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '409':
          description: User already exists
  /users/{user_id}:
    get:
      operationId: get_user
      summary: Get user by ID
      description: Get a specific user by ID (requires authentication)
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /public/health:
    get:
      operationId: health_check
      summary: Health check
      description: Public health check endpoint (no authentication required)
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
    CreateUserRequest:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string